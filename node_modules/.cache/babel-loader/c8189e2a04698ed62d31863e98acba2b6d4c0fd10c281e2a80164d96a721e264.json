{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chitt\\\\OneDrive\\\\Desktop\\\\REACT\\\\todolists\\\\TodoList\\\\src\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { BsTrashFill } from \"react-icons/bs\";\nimport Alert from \"./Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [list, setList] = useState([]);\n  const [alert, setAlert] = useState({\n    status: false,\n    message: \"\",\n    type: \"\"\n  });\n  const [message, setMessage] = useState({\n    id: \"\",\n    text: \"\"\n  });\n  const [isEditing, setEditing] = useState({\n    id: \"\",\n    Editing: false\n  });\n  const changeMessage = e => {\n    setMessage({\n      ...message,\n      text: e.target.value\n    });\n  };\n  const handleAdd = e => {\n    e.preventDefault();\n    if (!message.text) {\n      setAlert({\n        status: true,\n        type: \"danger\",\n        message: \"Please Enter Some Text\"\n      });\n      return;\n    }\n    let newTodo = {\n      text: message.text,\n      id: new Date().getTime().toString()\n    };\n    setList([...list, newTodo]);\n    setMessage({\n      id: \"\",\n      text: \"\"\n    });\n    setAlert({\n      status: true,\n      message: \"Item Added\",\n      type: \"success\"\n    });\n  };\n  const handleEdit = e => {\n    e.preventDefault();\n    if (!message.text) {\n      setAlert({\n        status: true,\n        type: \"danger\",\n        message: \"Please Enter Some Text\"\n      });\n      return;\n    }\n    let newTodos = list.map(eachItem => {\n      if (eachItem.id === isEditing.id) {\n        return {\n          id: isEditing.id,\n          text: message.text\n        };\n      } else {\n        return eachItem;\n      }\n    });\n    setList(newTodos);\n    setAlert({\n      status: true,\n      message: \"Item Updated\",\n      type: \"success\"\n    });\n    setMessage({\n      id: \"\",\n      text: \"\"\n    });\n    setEditing({\n      id: \"\",\n      isEditing: false\n    });\n  };\n  const handleDelete = id => {\n    let newTodos = list.filter(eachItem => {\n      return eachItem.id !== id;\n    });\n    setList(newTodos);\n    setAlert({\n      status: true,\n      message: \"Item Deleted\",\n      type: \"danger\"\n    });\n  };\n  const changeTodoItem = id => {\n    setEditing({\n      ...isEditing,\n      id: id,\n      Editing: true\n    });\n    let editableItem = list.find(eachItem => eachItem.id === id);\n    setMessage({\n      ...message,\n      id: editableItem.id,\n      text: editableItem.text\n    });\n  };\n  const clearTodoList = () => {\n    setAlert({\n      status: true,\n      message: \"Items Deleted\",\n      type: \"danger\"\n    });\n    setList([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container section-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Kiran Todo list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"underline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), alert.status && /*#__PURE__*/_jsxDEV(Alert, {\n        setAlert: setAlert,\n        message: alert.message,\n        type: alert.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-input\",\n            value: message.text,\n            placeholder: \"Enter Some Text\",\n            onChange: changeMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), isEditing.Editing ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-btn\",\n            type: \"submit\",\n            onClick: handleEdit,\n            children: \"edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-btn\",\n            type: \"submit\",\n            onClick: handleAdd,\n            children: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), list.length === 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"Todo List Is Empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todolist-container\",\n        children: list.map(eachItem => {\n          const {\n            id,\n            text\n          } = eachItem;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message\",\n              children: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit-btn\",\n                onClick: () => changeTodoItem(id),\n                children: /*#__PURE__*/_jsxDEV(FiEdit, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-btn\",\n                onClick: () => handleDelete(id),\n                children: /*#__PURE__*/_jsxDEV(BsTrashFill, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), list.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clear-items\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-btn\",\n          onClick: clearTodoList,\n          children: \"Clear Todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"SbEKqRKyUaARk5xryCWMuADvT9Q=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","FiEdit","BsTrashFill","Alert","TodoList","list","setList","alert","setAlert","status","message","type","setMessage","id","text","isEditing","setEditing","Editing","changeMessage","e","target","value","handleAdd","preventDefault","newTodo","Date","getTime","toString","handleEdit","newTodos","map","eachItem","handleDelete","filter","changeTodoItem","editableItem","find","clearTodoList","length","color"],"sources":["C:/Users/chitt/OneDrive/Desktop/REACT/todolists/TodoList/src/TodoList.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { FiEdit } from \"react-icons/fi\";\r\nimport { BsTrashFill } from \"react-icons/bs\";\r\nimport Alert from \"./Alert\";\r\n\r\nconst TodoList = () => {\r\n  const [list, setList] = useState([]);\r\n  const [alert, setAlert] = useState({ status: false, message: \"\", type: \"\" });\r\n\r\n  const [message, setMessage] = useState({\r\n    id: \"\",\r\n    text: \"\",\r\n  });\r\n\r\n  const [isEditing, setEditing] = useState({\r\n    id: \"\",\r\n    Editing: false,\r\n  });\r\n\r\n  const changeMessage = (e) => {\r\n    setMessage({\r\n      ...message,\r\n      text: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleAdd = (e) => {\r\n    e.preventDefault();\r\n    if (!message.text) {\r\n      setAlert({\r\n        status: true,\r\n        type: \"danger\",\r\n        message: \"Please Enter Some Text\",\r\n      });\r\n      return;\r\n    }\r\n    let newTodo = {\r\n      text: message.text,\r\n      id: new Date().getTime().toString(),\r\n    };\r\n    setList([...list, newTodo]);\r\n    setMessage({\r\n      id: \"\",\r\n      text: \"\",\r\n    });\r\n    setAlert({ status: true, message: \"Item Added\", type: \"success\" });\r\n  };\r\n\r\n  const handleEdit = (e) => {\r\n    e.preventDefault();\r\n    if (!message.text) {\r\n      setAlert({\r\n        status: true,\r\n        type: \"danger\",\r\n        message: \"Please Enter Some Text\",\r\n      });\r\n      return;\r\n    }\r\n    let newTodos = list.map((eachItem) => {\r\n      if (eachItem.id === isEditing.id) {\r\n        return {\r\n          id: isEditing.id,\r\n          text: message.text,\r\n        };\r\n      } else {\r\n        return eachItem;\r\n      }\r\n    });\r\n    setList(newTodos);\r\n    setAlert({ status: true, message: \"Item Updated\", type: \"success\" });\r\n    setMessage({\r\n      id: \"\",\r\n      text: \"\",\r\n    });\r\n    setEditing({\r\n      id: \"\",\r\n      isEditing: false,\r\n    });\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    let newTodos = list.filter((eachItem) => {\r\n      return eachItem.id !== id;\r\n    });\r\n    setList(newTodos);\r\n    setAlert({ status: true, message: \"Item Deleted\", type: \"danger\" });\r\n  };\r\n\r\n  const changeTodoItem = (id) => {\r\n    setEditing({\r\n      ...isEditing,\r\n      id: id,\r\n      Editing: true,\r\n    });\r\n    let editableItem = list.find((eachItem) => eachItem.id === id);\r\n    setMessage({\r\n      ...message,\r\n      id: editableItem.id,\r\n      text: editableItem.text,\r\n    });\r\n  };\r\n\r\n  const clearTodoList = () => {\r\n    setAlert({ status: true, message: \"Items Deleted\", type: \"danger\" });\r\n    setList([]);\r\n  };\r\n\r\n  return (\r\n    <main className=\"section\">\r\n      <div className=\"main-container section-center\">\r\n        <div className=\"title\">\r\n          <h2>Kiran Todo list</h2>\r\n          <div className=\"underline\"></div>\r\n        </div>\r\n        {alert.status && (\r\n          <Alert\r\n            setAlert={setAlert}\r\n            message={alert.message}\r\n            type={alert.type}\r\n          />\r\n        )}\r\n        <div className=\"form-container\">\r\n          <form>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-input\"\r\n              value={message.text}\r\n              placeholder=\"Enter Some Text\"\r\n              onChange={changeMessage}\r\n            />\r\n            {isEditing.Editing ? (\r\n              <button className=\"submit-btn\" type=\"submit\" onClick={handleEdit}>\r\n                edit\r\n              </button>\r\n            ) : (\r\n              <button className=\"submit-btn\" type=\"submit\" onClick={handleAdd}>\r\n                submit\r\n              </button>\r\n            )}\r\n          </form>\r\n        </div>\r\n        {list.length === 0 && (\r\n          <h3 style={{ color: \"red\" }}>Todo List Is Empty</h3>\r\n        )}\r\n        <div className=\"todolist-container\">\r\n          {list.map((eachItem) => {\r\n            const { id, text } = eachItem;\r\n            return (\r\n              <div className=\"todo\" key={id}>\r\n                <div className=\"message\">{text}</div>\r\n                <div className=\"button-container\">\r\n                  <button\r\n                    className=\"edit-btn\"\r\n                    onClick={() => changeTodoItem(id)}\r\n                  >\r\n                    <FiEdit />\r\n                  </button>\r\n                  <button\r\n                    className=\"delete-btn\"\r\n                    onClick={() => handleDelete(id)}\r\n                  >\r\n                    <BsTrashFill />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        {list.length > 0 && (\r\n          <div className=\"clear-items\">\r\n            <button className=\"clear-btn\" onClick={clearTodoList}>\r\n              Clear Todos\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}